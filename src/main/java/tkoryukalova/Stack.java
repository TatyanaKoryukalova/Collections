package tkoryukalova;

/**
 * Стек - структура данных, работающая по принципу LIFO(последний зашел, первый вышел).
 * Имеет ограниченную, заранее заданную пользователем вместимость.
 * Для пользователя доступен только элемент на "вершине" стека, то есть тот, который
 * был добавлен последним.
 * После удаления вершины будет доступен предпоследний элемент.
 * @param <T>
 */
public interface Stack<T> {
    /**
     *Добавляет элемент на вершину стека
     *
     * @param item - добавляемый элемент
     * @throws IllegalStateException - в случае, если стек заполнен
     */
    void push(T item);

    /**
     * Удаляет верхний элемент из стека
     *
     * @return T - удаляемый элемент
     * @throws java.util.NoSuchElementException - в случае, если стек пуст
     */
    T pop();

    /**
     * Возвращает элемент с вершины стека, не удаляя его
     *
     * @return T - элемент с вершины стека
     * @throws java.util.NoSuchElementException - в случае, если стек пуст
     */
    T peek();

    /**
     * Возвращает true в случае, если стек пуст и false, если есть хотя бы один элемент
     *
     * @return true в случае, если стек пуст
     */
    boolean isEmpty();

    /**
     * Возвращает true в случае, если стек заполнен и false, если есть хотя бы одно пустое место
     *
     * @return true в случае, если стек заполнен
     */
    boolean isFull();

    /**
     * Возвращает количество элементов в стеке
     *
     * @return - количество элементов в стеке
     */
    int size();
}
